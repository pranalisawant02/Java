import java.io.*;
import java.util.*;

interface PerformOperation {
    boolean check(int a);
}

class MyMath {
    public static boolean checker(PerformOperation p, int num) {
        return p.check(num);
    }

    // 1) Odd/Even
    public PerformOperation isOdd() {
        return new PerformOperation() {
            public boolean check(int a) {
                return (a & 1) == 1;
            }
        };
    }

    // 2) Prime/Composite
    public PerformOperation isPrime() {
        return new PerformOperation() {
            public boolean check(int n) {
                if (n < 2) return false;
                if (n == 2 || n == 3) return true;
                if (n % 2 == 0) return false;
                int r = (int) Math.sqrt(n);
                for (int i = 3; i <= r; i += 2) {
                    if (n % i == 0) return false;
                }
                return true;
            }
        };
    }

    // 3) Palindrome / Not
    public PerformOperation isPalindrome() {
        return new PerformOperation() {
            public boolean check(int n) {
                String s = String.valueOf(n);
                return new StringBuilder(s).reverse().toString().equals(s);
            }
        };
    }
}

public class Solution {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        MyMath ob = new MyMath();

        while (T-- > 0) {
            int type = sc.nextInt();
            int num  = sc.nextInt();
            PerformOperation op;

            switch (type) {
                case 1: // Odd/Even
                    op = ob.isOdd();
                    System.out.println(MyMath.checker(op, num) ? "ODD" : "EVEN");
                    break;
                case 2: // Prime/Composite
                    op = ob.isPrime();
                    System.out.println(MyMath.checker(op, num) ? "PRIME" : "COMPOSITE");
                    break;
                case 3: // Palindrome
                    op = ob.isPalindrome();
                    System.out.println(MyMath.checker(op, num) ? "PALINDROME" : "NOT PALINDROME");
                    break;
                default:
                    // ignore invalid type
                    break;
            }
        }
        sc.close();
    }
}
